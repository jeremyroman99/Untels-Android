    workflows:
      android-workflow:
        name: Android Workflow
        max_build_duration: 60
        instance_type: mac_mini_m1
        cache:
          cache_paths:
            - ~/.sonar
        environment:
          #android_signing:
          #  - codemagic_keystore
          groups:
            - sonarcloud_credentials
        triggering:
          events:
            - push
            - pull_request
          branch_patterns:
            - pattern: '*'
              include: true
              source: true
        scripts:
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/local.properties"
            - name: Build Android debug APK
              script: |
                ./gradlew assembleDebug
            - name: Build Android test APK
              script: |
                ./gradlew assembleAndroidTest
            - name: Run AWS Device Farm test
              script: |
                cd .scripts && ./run_aws_espresso.sh
            - name: Verify Device Farm test
              script: |
                set -e
                set -x
                export AWS_RESULT=$(cat $CM_BUILD_DIR/.scripts/test-result.json | jq -r '.run.result')
                if [ $AWS_RESULT != "PASSED" ] 
                then
                  echo "AWS tests did not pass, the result was $AWS_RESULT"
                  exit 1
                else 
                  echo "AWS tests PASSED!"
                fi
            - name: Build Android production release
              script: |
                ./gradlew assembleRelease    
        artifacts:
            - app/build/outputs/**/*.apk
        #publishing:
        #    email:
        #        recipients:
        #            - user1@example.com
        #            - user2@example.com
        #        notify:
        #          success: true
        #          failure: false   
        #    google_play:                          # For publishing your Android app to Google Play
        #        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        #        track: alpha                      # Name of the track: internal, alpha, beta, production
